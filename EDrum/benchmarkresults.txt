/* Benchmark Results */
/* 28/02/09: Number of samples per millisecond.
Function is:
ADC12_Sample();
BenchMarkCount++;

50ms = 6300 samples
20ms = 2540 samples
10ms = 1280 samples
8ms = 1030 samples
5ms = 660 samples
2ms = 280 samples
1ms = 150 samples

Note that these samples are the 'maximum' possible. No Drum processing has occured.

==== BENCHMARK 2 ======
1. Removed retrigger period
2. Ignored Crosstalk delay.
3. Note that each 'sample' includes 13 samples (13 activated analogue channels)
4. Results:

50ms = 71 (923) samples
20ms = 30 (390) samples
15ms = 22 (286) samples
10ms = 15 (195) samples
8ms = 13 (169) samples
5ms = 9 (117) samples
2ms = 4 (52) samples
1ms = 3 (39) samples


void Benchmark(void)
{
   uint8_t i = 0;
   uint8_t SelectedChannel = 0;
   uint16_t sample;
   
	while( ActiveChannels[i] != LAST_CHANNEL_INDEX)
	{
      SelectedChannel = ActiveChannels[i++];
      SensorChannel(SelectedChannel);
      //_delay_us(SensorSettings->CrosstalkDelay);
      sample = ADC12_Sample();
      ObtainPeak(SelectedChannel, sample);
   }   
}


======= BENCHMARK 3 =======
1. Removed retrigger period
2. Ignored Crosstalk delay.
3. Note that each 'sample' includes 13 samples (13 activated analogue channels)
4. Results:

50ms = 408 (5304) samples
20ms = 167 (2171) samples
15ms = 127 (1651) samples
10ms = 87 (1131) samples
8ms = 71 (923) samples
5ms = 47 (611) samples
2ms = 23 (299) samples
1ms = 15 (195) samples

Perhaps ObtainPeak or SensorChannel uses many clock cycles

void Benchmark(void)
{
   uint8_t i = 0;
   uint8_t SelectedChannel = 0;
   uint16_t sample;
   
	while( ActiveChannels[i] != LAST_CHANNEL_INDEX)
	{
      SelectedChannel = ActiveChannels[i++];
      sample = ADC12_Sample();
   }   
}

======= BENCHMARK 4 =======
1. Removed retrigger period
2. Ignored Crosstalk delay. Added Channel Select Function.
3. Note that each 'sample' includes 13 samples (13 activated analogue channels)
4. Results:

50ms = 75 (975) samples
20ms = 31 (403) samples
15ms = 24 (312) samples
10ms = 16 (208) samples
8ms = 13 (169) samples
5ms = 9 (117) samples
2ms = 5 (65) samples
1ms = 3 (39) samples

Perhaps SensorChannel uses many clock cycles!! We must optimise this!

==== POST OPTIMISATION ======

50ms = 232 (3016) samples
20ms = 97 (1261) samples
15ms = 74 (962) samples
10ms = 51 (663) samples
8ms = 42 (546) samples
5ms = 27 (351) samples
2ms = 13 (169) samples
1ms = 9 (117) samples

HUGE 3x improvement!!!


void Benchmark(void)
{
   uint8_t i = 0;
   uint8_t SelectedChannel = 0;
   uint16_t sample;
   
	while( ActiveChannels[i] != LAST_CHANNEL_INDEX)
	{
      SelectedChannel = ActiveChannels[i++];
      SensorChannel(SelectedChannel);
      sample = ADC12_Sample();
   }   
}



======= BENCHMARK 5 =======
1. Added Obtain Peak
2. Results

50ms = 194 (2522) samples
20ms = 80 (1040) samples
15ms = 61 (793) samples
10ms = 42 (546) samples
8ms = 35 (455) samples
5ms = 23 (299) samples
2ms = 11 (143) samples
1ms = 7 (91) samples


void Benchmark(void)
{
   uint8_t i = 0;
   uint8_t SelectedChannel = 0;
   uint16_t sample;
   
	while( ActiveChannels[i] != LAST_CHANNEL_INDEX)
	{
      SelectedChannel = ActiveChannels[i++];      
		SensorChannel(SelectedChannel);
      sample = ADC12_Sample();                   
      ObtainPeak(SelectedChannel, sample);
   }   
}


======= BENCHMARK 6 =======
1. Now introducing the 150us delay... Oh dear!
2. Results

Okay it sux... like real bad! 5 samples for 15ms etc.

In light of this, we shall return back to using the play function, but attempt to increase
thresholds and reduce crosstalk delay.

Returning to play mode, and reducing Crosstalk delay makes performance much the same as
benchmark 5.

void Benchmark(void)
{
   uint8_t i = 0;
   uint8_t SelectedChannel = 0;
   uint16_t sample;
   
	while( ActiveChannels[i] != LAST_CHANNEL_INDEX)
	{
      SelectedChannel = ActiveChannels[i++];      
		SensorChannel(SelectedChannel);
		_delay_us(SensorSettings->CrosstalkDelay);
      sample = ADC12_Sample();                   
      ObtainPeak(SelectedChannel, sample);
   }   
}

======= BENCHMARK 6 =======
1. Gain's have been adjusted and so have thresholds
2. Cross talk delay has been reduced from 150us to 12us.
2. Results

This is about a 50% reduction in speed after introducing delay. And an overall
reduction in max speed by 

50ms = 108 (1404) samples
20ms = 44 (572) samples
15ms = 33 (429) samples
10ms = 22 (286) samples
8ms = 18 (234) samples
5ms = 12 (156) samples
2ms = 5 (65) samples
1ms = 3 (39) samples


*/
