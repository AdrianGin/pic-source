Archive member included because of file (symbol)

d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
                              d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o (exit)
d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
                              MSXConv.o (__do_copy_data)
d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                              MSXConv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

readyData           0x3               MSXConv.o
event               0x3               MSXConv.o
transmitState       0x1               hardUart.o
dataReady           0x1               MSXConv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
LOAD MSXConv.o
LOAD hardUart.o
LOAD ringbuffer.o
LOAD MSX_Mouse.o
LOAD PS2_Mouse.o
LOAD d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a
LOAD d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5\libc.a
LOAD d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7a0
 *(.vectors)
 .vectors       0x00000000       0x68 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_10
                0x000000a2                __vector_16
 .text          0x000000a6       0xb2 MSXConv.o
                0x000000a6                __vector_20
                0x0000010c                __vector_18
 .text          0x00000158      0x182 hardUart.o
                0x00000158                uartInit
                0x0000018a                uartSetBaud
                0x0000019c                uartDisable
                0x000001ae                uartTx
                0x000001fc                uartTxDump
                0x00000230                uartTxDump_P
                0x00000274                uartTxString
                0x00000298                uartTxString_P
                0x000002c0                uartNewLine
 .text          0x000002da       0xee ringbuffer.o
                0x000002da                ringbuffer_get
                0x0000031c                ringbuffer_len
                0x00000350                ringbuffer_put
                0x000003a2                ringbuffer_isEmpty
                0x000003bc                ringbuffer_clear
 .text          0x000003c8       0xb8 MSX_Mouse.o
                0x000003c8                MSX_SendPosition
                0x0000043a                MSX_SendButtons
                0x00000452                MSX_ValidateInputs
 .text          0x00000480      0x26a PS2_Mouse.o
                0x00000480                PS2_ValidateData
                0x000004c6                PS2_SendByte
                0x00000536                PS2_GetByte
                0x000005a4                PS2_GetPositionPacket
                0x00000652                PS2_Init
 .text          0x000006ea        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .text          0x000006ea        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .text          0x000006ea        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                0x000006ea                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000006ea       0xb2 MSXConv.o
                0x000006ea                main
 .text.libgcc   0x0000079c        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000079c        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000079c        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                0x0000079c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000079c        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
                0x0000079c                _exit
                0x0000079c                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000079c        0x4 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007a0                _etext = .

.data           0x00800100       0x26 load address 0x000007a0
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100       0x11 MSXConv.o
                0x00800100                dataSent
                0x00800101                PrimaryUART
 .data          0x00800111       0x14 hardUart.o
                0x00800111                ReceiveBuffer
                0x0080011b                TransmitBuffer
 .data          0x00800125        0x0 ringbuffer.o
 .data          0x00800125        0x0 MSX_Mouse.o
 .data          0x00800125        0x0 PS2_Mouse.o
 .data          0x00800125        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .data          0x00800125        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800125        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800126                . = ALIGN (0x2)
 *fill*         0x00800125        0x1 00
                0x00800126                _edata = .
                0x00800126                PROVIDE (__data_end, .)

.bss            0x00800126       0x29
                0x00800126                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800126        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800126        0x0 MSXConv.o
 .bss           0x00800126       0x20 hardUart.o
 .bss           0x00800146        0x0 ringbuffer.o
 .bss           0x00800146        0x0 MSX_Mouse.o
 .bss           0x00800146        0x1 PS2_Mouse.o
 .bss           0x00800147        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800147        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800147        0x0 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800147        0x7 MSXConv.o
                0x00800147                readyData
                0x0080014a                event
                0x0080014d                dataReady
 COMMON         0x0080014e        0x1 hardUart.o
                0x0080014e                transmitState
                0x0080014f                PROVIDE (__bss_end, .)
                0x000007a0                __data_load_start = LOADADDR (.data)
                0x000007c6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080014f        0x0
                0x0080014f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080014f                PROVIDE (__noinit_end, .)
                0x0080014f                _end = .
                0x0080014f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x108
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 MSXConv.o
 .debug_aranges
                0x00000028       0x20 hardUart.o
 .debug_aranges
                0x00000048       0x20 ringbuffer.o
 .debug_aranges
                0x00000068       0x20 MSX_Mouse.o
 .debug_aranges
                0x00000088       0x20 PS2_Mouse.o
 .debug_aranges
                0x000000a8       0x20 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_aranges
                0x000000c8       0x20 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_aranges
                0x000000e8       0x20 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x11d0
 *(.debug_info)
 .debug_info    0x00000000      0x345 MSXConv.o
 .debug_info    0x00000345      0x4ca hardUart.o
 .debug_info    0x0000080f      0x1a0 ringbuffer.o
 .debug_info    0x000009af      0x21a MSX_Mouse.o
 .debug_info    0x00000bc9      0x370 PS2_Mouse.o
 .debug_info    0x00000f39       0xdd d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_info    0x00001016       0xdd d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_info    0x000010f3       0xdd d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x662
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x103 MSXConv.o
 .debug_abbrev  0x00000103      0x15d hardUart.o
 .debug_abbrev  0x00000260       0xbe ringbuffer.o
 .debug_abbrev  0x0000031e      0x122 MSX_Mouse.o
 .debug_abbrev  0x00000440      0x1e6 PS2_Mouse.o
 .debug_abbrev  0x00000626       0x14 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_abbrev  0x0000063a       0x14 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_abbrev  0x0000064e       0x14 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x844
 *(.debug_line)
 .debug_line    0x00000000      0x17e MSXConv.o
 .debug_line    0x0000017e      0x15f hardUart.o
 .debug_line    0x000002dd       0x8a ringbuffer.o
 .debug_line    0x00000367      0x128 MSX_Mouse.o
 .debug_line    0x0000048f      0x20e PS2_Mouse.o
 .debug_line    0x0000069d       0x88 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_line    0x00000725       0x91 d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_line    0x000007b6       0x8e d:/avr toolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x344
 *(.debug_frame)
 .debug_frame   0x00000000       0xd4 MSXConv.o
 .debug_frame   0x000000d4      0x134 hardUart.o
 .debug_frame   0x00000208       0x64 ringbuffer.o
 .debug_frame   0x0000026c       0x44 MSX_Mouse.o
 .debug_frame   0x000002b0       0x94 PS2_Mouse.o

.debug_str      0x00000000      0x46b
 *(.debug_str)
 .debug_str     0x00000000      0x190 MSXConv.o
                                0x1d0 (size before relaxing)
 .debug_str     0x00000190      0x118 hardUart.o
                                0x24e (size before relaxing)
 .debug_str     0x000002a8       0x95 ringbuffer.o
                                0x118 (size before relaxing)
 .debug_str     0x0000033d       0xa9 MSX_Mouse.o
                                0x16c (size before relaxing)
 .debug_str     0x000003e6       0x85 PS2_Mouse.o
                                0x1b0 (size before relaxing)

.debug_loc      0x00000000      0xbb9
 *(.debug_loc)
 .debug_loc     0x00000000      0x22f MSXConv.o
 .debug_loc     0x0000022f      0x4e9 hardUart.o
 .debug_loc     0x00000718       0xf6 ringbuffer.o
 .debug_loc     0x0000080e      0x1b4 MSX_Mouse.o
 .debug_loc     0x000009c2      0x1f7 PS2_Mouse.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(MSXConv.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 MSXConv.o
