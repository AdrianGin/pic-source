Archive member included because of file (symbol)

d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
                              d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o (exit)
d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_copy_data.o)
                              MSXConv.o (__do_copy_data)
d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_clear_bss.o)
                              MSXConv.o (__do_clear_bss)
d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o)
                              MSXConv.o (utoa)
d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o) (strrev)
d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_udivmodhi4.o)
                              d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

readyData           0x3               MSXConv.o
event               0x3               MSXConv.o
transmitState       0x1               hardUart.o
dataReady           0x1               MSXConv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
LOAD MSXConv.o
LOAD hardUart.o
LOAD ringbuffer.o
LOAD MSX_Mouse.o
LOAD PS2_Mouse.o
LOAD d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a
LOAD d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a
LOAD d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x8f0
 *(.vectors)
 .vectors       0x00000000       0x68 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_10
                0x000000a2                __vector_16
 .text          0x000000a6      0x212 MSXConv.o
                0x000000a6                __vector_18
                0x000000f2                __vector_20
                0x00000158                main
 .text          0x000002b8      0x1a0 hardUart.o
                0x000002b8                uartInit
                0x000002ea                uartSetBaud
                0x000002fc                uartDisable
                0x0000030e                uartTx
                0x0000035c                uartNewLine
                0x00000376                uartTxString_P
                0x000003a0                uartTxString
                0x000003ca                uartTxDump_P
                0x00000412                uartTxDump
 .text          0x00000458      0x112 ringbuffer.o
                0x00000458                ringbuffer_get
                0x0000049a                ringbuffer_put
                0x00000510                ringbuffer_len
                0x00000542                ringbuffer_isEmpty
                0x0000055e                ringbuffer_clear
 .text          0x0000056a       0xc8 MSX_Mouse.o
                0x0000056a                MSX_ValidateInputs
                0x00000598                MSX_SendButtons
                0x000005c4                MSX_SendPosition
 .text          0x00000632      0x246 PS2_Mouse.o
                0x00000632                PS2_ValidateData
                0x0000067a                PS2_GetByte
                0x000006e6                PS2_GetPositionPacket
                0x00000764                PS2_SendByte
                0x000007d8                PS2_Init
 .text          0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
 .text          0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o)
 .text          0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000878                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000878        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000878       0x2c d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o)
                0x00000878                utoa
 .text.avr-libc
                0x000008a4       0x20 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x000008a4                strrev
 .text.libgcc   0x000008c4       0x28 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000008c4                __udivmodhi4
                0x000008ec                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000008ec        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
                0x000008ec                _exit
                0x000008ec                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000008ec        0x4 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000008f0                _etext = .

.data           0x00800100       0x38 load address 0x000008f0
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100       0x23 MSXConv.o
                0x00800112                PrimaryUART
                0x00800122                dataSent
 .data          0x00800123       0x14 hardUart.o
                0x00800123                TransmitBuffer
                0x0080012d                ReceiveBuffer
 .data          0x00800137        0x0 ringbuffer.o
 .data          0x00800137        0x0 MSX_Mouse.o
 .data          0x00800137        0x0 PS2_Mouse.o
 .data          0x00800137        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
 .data          0x00800137        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800137        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800137        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o)
 .data          0x00800137        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x00800137        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800138                . = ALIGN (0x2)
 *fill*         0x00800137        0x1 00
                0x00800138                _edata = .
                0x00800138                PROVIDE (__data_end, .)

.bss            0x00800138       0x29
                0x00800138                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800138        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800138        0x0 MSXConv.o
 .bss           0x00800138       0x20 hardUart.o
 .bss           0x00800158        0x0 ringbuffer.o
 .bss           0x00800158        0x0 MSX_Mouse.o
 .bss           0x00800158        0x1 PS2_Mouse.o
 .bss           0x00800159        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800159        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800159        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800159        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o)
 .bss           0x00800159        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x00800159        0x0 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800159        0x7 MSXConv.o
                0x00800159                readyData
                0x0080015c                event
                0x0080015f                dataReady
 COMMON         0x00800160        0x1 hardUart.o
                0x00800160                transmitState
                0x00800161                PROVIDE (__bss_end, .)
                0x000008f0                __data_load_start = LOADADDR (.data)
                0x00000928                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800161        0x0
                0x00800161                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800161                PROVIDE (__noinit_end, .)
                0x00800161                _end = .
                0x00800161                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x8d0
 *(.stab)
 .stab          0x00000000      0x6cc d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o
 .stab          0x000006cc      0x12c d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(utoa.o)
                                0x138 (size before relaxing)
 .stab          0x000007f8       0xd8 d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000      0x14d
 *(.stabstr)
 .stabstr       0x00000000      0x14d d:/avrtoolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 MSXConv.o
 .debug_aranges
                0x00000020       0x20 hardUart.o
 .debug_aranges
                0x00000040       0x20 ringbuffer.o
 .debug_aranges
                0x00000060       0x20 MSX_Mouse.o
 .debug_aranges
                0x00000080       0x20 PS2_Mouse.o

.debug_pubnames
                0x00000000      0x28b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x7e MSXConv.o
 .debug_pubnames
                0x0000007e       0xd5 hardUart.o
 .debug_pubnames
                0x00000153       0x77 ringbuffer.o
 .debug_pubnames
                0x000001ca       0x52 MSX_Mouse.o
 .debug_pubnames
                0x0000021c       0x6f PS2_Mouse.o

.debug_info     0x00000000      0xe5a
 *(.debug_info)
 .debug_info    0x00000000      0x2f4 MSXConv.o
 .debug_info    0x000002f4      0x484 hardUart.o
 .debug_info    0x00000778      0x1ba ringbuffer.o
 .debug_info    0x00000932      0x257 MSX_Mouse.o
 .debug_info    0x00000b89      0x2d1 PS2_Mouse.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x593
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x117 MSXConv.o
 .debug_abbrev  0x00000117      0x10c hardUart.o
 .debug_abbrev  0x00000223      0x10c ringbuffer.o
 .debug_abbrev  0x0000032f      0x107 MSX_Mouse.o
 .debug_abbrev  0x00000436      0x15d PS2_Mouse.o

.debug_line     0x00000000      0xd88
 *(.debug_line)
 .debug_line    0x00000000      0x2cb MSXConv.o
 .debug_line    0x000002cb      0x2f0 hardUart.o
 .debug_line    0x000005bb      0x150 ringbuffer.o
 .debug_line    0x0000070b      0x22d MSX_Mouse.o
 .debug_line    0x00000938      0x450 PS2_Mouse.o

.debug_frame    0x00000000      0x1e0
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 MSXConv.o
 .debug_frame   0x00000040       0xa0 hardUart.o
 .debug_frame   0x000000e0       0x60 ringbuffer.o
 .debug_frame   0x00000140       0x40 MSX_Mouse.o
 .debug_frame   0x00000180       0x60 PS2_Mouse.o

.debug_str      0x00000000      0x469
 *(.debug_str)
 .debug_str     0x00000000      0x190 MSXConv.o
                                0x1d0 (size before relaxing)
 .debug_str     0x00000190      0x122 hardUart.o
                                0x258 (size before relaxing)
 .debug_str     0x000002b2       0x95 ringbuffer.o
                                0x118 (size before relaxing)
 .debug_str     0x00000347       0x9d MSX_Mouse.o
                                0x169 (size before relaxing)
 .debug_str     0x000003e4       0x85 PS2_Mouse.o
                                0x195 (size before relaxing)

.debug_loc      0x00000000      0x703
 *(.debug_loc)
 .debug_loc     0x00000000       0x4f MSXConv.o
 .debug_loc     0x0000004f      0x32a hardUart.o
 .debug_loc     0x00000379       0xa0 ringbuffer.o
 .debug_loc     0x00000419       0xbd MSX_Mouse.o
 .debug_loc     0x000004d6      0x22d PS2_Mouse.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(MSXConv.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 MSXConv.o
